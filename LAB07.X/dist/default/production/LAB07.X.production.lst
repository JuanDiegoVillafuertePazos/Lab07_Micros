

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 17:41:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	nvBANK0
   210  0035                     __pnvBANK0:
   211  0035                     _unidades:
   212  0035                     	ds	1
   213  0036                     _decenas:
   214  0036                     	ds	1
   215  0037                     _centenas:
   216  0037                     	ds	1
   217  0006                     _PORTB	set	6
   218  0008                     _PORTD	set	8
   219  000B                     _INTCONbits	set	11
   220  0001                     _TMR0	set	1
   221  0007                     _PORTC	set	7
   222  0005                     _PORTA	set	5
   223  0006                     _PORTBbits	set	6
   224  005A                     _T0IF	set	90
   225  0058                     _RBIF	set	88
   226  0096                     _IOCBbits	set	150
   227  0095                     _WPUBbits	set	149
   228  0081                     _OPTION_REGbits	set	129
   229  0088                     _TRISD	set	136
   230  0087                     _TRISC	set	135
   231  0085                     _TRISA	set	133
   232  0086                     _TRISB	set	134
   233  008F                     _OSCCONbits	set	143
   234  0188                     _ANSEL	set	392
   235  0189                     _ANSELH	set	393
   236                           
   237                           	psect	cinit
   238  0011                     start_initialization:	
   239                           ; #config settings
   240                           
   241  0011                     __initialization:
   242                           
   243                           ; Clear objects allocated to COMMON
   244  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   245  0012                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  0012                     __end_of__initialization:
   249  0012  0183               	clrf	3
   250  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0078                     __pbssCOMMON:
   254  0078                     _banderas:
   255  0078                     	ds	1
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:
   259  0070                     ?_tabla:
   260  0070                     ??_tabla:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_isr:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271  0070                     	ds	2
   272  0072                     tabla@display:
   273                           
   274                           ; 1 bytes @ 0x2
   275  0072                     	ds	1
   276  0073                     ??_isr:
   277                           
   278                           ; 1 bytes @ 0x3
   279  0073                     	ds	5
   280                           
   281                           	psect	cstackBANK0
   282  0020                     __pcstackBANK0:
   283  0020                     ?___awmod:
   284  0020                     ___awmod@divisor:	
   285                           ; 2 bytes @ 0x0
   286                           
   287                           
   288                           ; 2 bytes @ 0x0
   289  0020                     	ds	2
   290  0022                     ___awmod@dividend:
   291                           
   292                           ; 2 bytes @ 0x2
   293  0022                     	ds	2
   294  0024                     ??___awmod:
   295                           
   296                           ; 1 bytes @ 0x4
   297  0024                     	ds	1
   298  0025                     ___awmod@counter:
   299                           
   300                           ; 1 bytes @ 0x5
   301  0025                     	ds	1
   302  0026                     ___awmod@sign:
   303                           
   304                           ; 1 bytes @ 0x6
   305  0026                     	ds	1
   306  0027                     ?___awdiv:
   307  0027                     ___awdiv@divisor:	
   308                           ; 2 bytes @ 0x7
   309                           
   310                           
   311                           ; 2 bytes @ 0x7
   312  0027                     	ds	2
   313  0029                     ___awdiv@dividend:
   314                           
   315                           ; 2 bytes @ 0x9
   316  0029                     	ds	2
   317  002B                     ??___awdiv:
   318                           
   319                           ; 1 bytes @ 0xB
   320  002B                     	ds	1
   321  002C                     ___awdiv@counter:
   322                           
   323                           ; 1 bytes @ 0xC
   324  002C                     	ds	1
   325  002D                     ___awdiv@sign:
   326                           
   327                           ; 1 bytes @ 0xD
   328  002D                     	ds	1
   329  002E                     ___awdiv@quotient:
   330                           
   331                           ; 2 bytes @ 0xE
   332  002E                     	ds	2
   333  0030                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x10
   336  0030                     	ds	3
   337  0033                     _main$842:
   338                           
   339                           ; 2 bytes @ 0x13
   340  0033                     	ds	2
   341                           
   342                           	psect	maintext
   343  0016                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 124 in file "prograC.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       2       0       0       0
   365 ;;      Temps:          0       3       0       0       0
   366 ;;      Totals:         0       5       0       0       0
   367 ;;Total ram usage:        5 bytes
   368 ;; Hardware stack levels required when called:    3
   369 ;; This function calls:
   370 ;;		___awdiv
   371 ;;		___awmod
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _main
   379  0016                     _main:
   380  0016                     l1213:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   383                           
   384                           
   385                           ;prograC.c: 128:     OPTION_REGbits.PS1 = 1;
   386  0016  1683               	bsf	3,5	;RP0=1, select bank1
   387  0017  1303               	bcf	3,6	;RP1=0, select bank1
   388  0018  170F               	bsf	15,6	;volatile
   389                           
   390                           ;prograC.c: 129:     OPTION_REGbits.PS0 = 1;
   391  0019  128F               	bcf	15,5	;volatile
   392                           
   393                           ;prograC.c: 130: 
   394  001A  120F               	bcf	15,4	;volatile
   395                           
   396                           ;prograC.c: 131: 
   397  001B  140F               	bsf	15,0	;volatile
   398  001C                     l1215:
   399                           
   400                           ;prograC.c: 134: 
   401  001C  1683               	bsf	3,5	;RP0=1, select bank3
   402  001D  1703               	bsf	3,6	;RP1=1, select bank3
   403  001E  0189               	clrf	9	;volatile
   404                           
   405                           ;prograC.c: 135: 
   406  001F  0188               	clrf	8	;volatile
   407  0020                     l1217:
   408                           
   409                           ;prograC.c: 137:     INTCONbits.RBIE = 1;
   410  0020  3003               	movlw	3
   411  0021  1683               	bsf	3,5	;RP0=1, select bank1
   412  0022  1303               	bcf	3,6	;RP1=0, select bank1
   413  0023  0086               	movwf	6	;volatile
   414  0024                     l1219:
   415                           
   416                           ;prograC.c: 138:     INTCONbits.T0IE = 1;
   417  0024  0185               	clrf	5	;volatile
   418  0025                     l1221:
   419                           
   420                           ;prograC.c: 139: 
   421  0025  0187               	clrf	7	;volatile
   422  0026                     l1223:
   423                           
   424                           ;prograC.c: 140: 
   425  0026  0188               	clrf	8	;volatile
   426  0027                     l1225:
   427                           
   428                           ;prograC.c: 142:     {
   429  0027  1381               	bcf	1,7	;volatile
   430  0028                     l1227:
   431                           
   432                           ;prograC.c: 143:         centenas = PORTA/100;
   433  0028  1415               	bsf	21,0	;volatile
   434  0029                     l1229:
   435                           
   436                           ;prograC.c: 144:         decenas = PORTA%100/10;
   437  0029  1495               	bsf	21,1	;volatile
   438  002A                     l1231:
   439                           
   440                           ;prograC.c: 146:      }
   441  002A  1283               	bcf	3,5	;RP0=0, select bank0
   442  002B  1303               	bcf	3,6	;RP1=0, select bank0
   443  002C  0185               	clrf	5	;volatile
   444  002D                     l1233:
   445                           
   446                           ;prograC.c: 147: }
   447  002D  0186               	clrf	6	;volatile
   448  002E                     l1235:
   449  002E  0187               	clrf	7	;volatile
   450  002F                     l1237:
   451  002F  0188               	clrf	8	;volatile
   452  0030                     l1239:
   453  0030  1683               	bsf	3,5	;RP0=1, select bank1
   454  0031  1303               	bcf	3,6	;RP1=0, select bank1
   455  0032  1416               	bsf	22,0	;volatile
   456  0033                     l1241:
   457  0033  1496               	bsf	22,1	;volatile
   458  0034                     l1243:
   459  0034  1281               	bcf	1,5	;volatile
   460  0035                     l1245:
   461  0035  1181               	bcf	1,3	;volatile
   462  0036                     l1247:
   463  0036  1101               	bcf	1,2	;volatile
   464  0037                     l1249:
   465  0037  1481               	bsf	1,1	;volatile
   466  0038                     l1251:
   467  0038  1401               	bsf	1,0	;volatile
   468  0039  3064               	movlw	100
   469  003A  1283               	bcf	3,5	;RP0=0, select bank0
   470  003B  1303               	bcf	3,6	;RP1=0, select bank0
   471  003C  0081               	movwf	1	;volatile
   472  003D                     l1253:
   473  003D  110B               	bcf	11,2	;volatile
   474  003E                     l1255:
   475  003E  178B               	bsf	11,7	;volatile
   476  003F                     l1257:
   477  003F  158B               	bsf	11,3	;volatile
   478  0040                     l1259:
   479  0040  168B               	bsf	11,5	;volatile
   480  0041                     l1261:
   481  0041  3064               	movlw	100
   482  0042  00A7               	movwf	___awdiv@divisor
   483  0043  3000               	movlw	0
   484  0044  00A8               	movwf	___awdiv@divisor+1
   485  0045  0805               	movf	5,w	;volatile
   486  0046  00B0               	movwf	??_main
   487  0047  01B1               	clrf	??_main+1
   488  0048  0830               	movf	??_main,w
   489  0049  00A9               	movwf	___awdiv@dividend
   490  004A  0831               	movf	??_main+1,w
   491  004B  00AA               	movwf	___awdiv@dividend+1
   492  004C  120A  118A  2118  120A  118A  	fcall	___awdiv
   493  0051  1283               	bcf	3,5	;RP0=0, select bank0
   494  0052  1303               	bcf	3,6	;RP1=0, select bank0
   495  0053  0827               	movf	?___awdiv,w
   496  0054  00B2               	movwf	??_main+2
   497  0055  0832               	movf	??_main+2,w
   498  0056  00B7               	movwf	_centenas
   499  0057                     l1263:
   500  0057  300A               	movlw	10
   501  0058  00A7               	movwf	___awdiv@divisor
   502  0059  3000               	movlw	0
   503  005A  00A8               	movwf	___awdiv@divisor+1
   504  005B  0805               	movf	5,w	;volatile
   505  005C  00B0               	movwf	??_main
   506  005D  01B1               	clrf	??_main+1
   507  005E  0830               	movf	??_main,w
   508  005F  00A2               	movwf	___awmod@dividend
   509  0060  0831               	movf	??_main+1,w
   510  0061  00A3               	movwf	___awmod@dividend+1
   511  0062  3064               	movlw	100
   512  0063  00A0               	movwf	___awmod@divisor
   513  0064  3000               	movlw	0
   514  0065  00A1               	movwf	___awmod@divisor+1
   515  0066  120A  118A  2181  120A  118A  	fcall	___awmod
   516  006B  1283               	bcf	3,5	;RP0=0, select bank0
   517  006C  1303               	bcf	3,6	;RP1=0, select bank0
   518  006D  0821               	movf	?___awmod+1,w
   519  006E  00AA               	movwf	___awdiv@dividend+1
   520  006F  0820               	movf	?___awmod,w
   521  0070  00A9               	movwf	___awdiv@dividend
   522  0071  120A  118A  2118  120A  118A  	fcall	___awdiv
   523  0076  1283               	bcf	3,5	;RP0=0, select bank0
   524  0077  1303               	bcf	3,6	;RP1=0, select bank0
   525  0078  0827               	movf	?___awdiv,w
   526  0079  00B2               	movwf	??_main+2
   527  007A  0832               	movf	??_main+2,w
   528  007B  00B6               	movwf	_decenas
   529  007C                     l1265:
   530  007C  0805               	movf	5,w	;volatile
   531  007D  00B0               	movwf	??_main
   532  007E  01B1               	clrf	??_main+1
   533  007F  0830               	movf	??_main,w
   534  0080  00A2               	movwf	___awmod@dividend
   535  0081  0831               	movf	??_main+1,w
   536  0082  00A3               	movwf	___awmod@dividend+1
   537  0083  3064               	movlw	100
   538  0084  00A0               	movwf	___awmod@divisor
   539  0085  3000               	movlw	0
   540  0086  00A1               	movwf	___awmod@divisor+1
   541  0087  120A  118A  2181  120A  118A  	fcall	___awmod
   542  008C  1283               	bcf	3,5	;RP0=0, select bank0
   543  008D  1303               	bcf	3,6	;RP1=0, select bank0
   544  008E  0821               	movf	?___awmod+1,w
   545  008F  00B4               	movwf	_main$842+1
   546  0090  0820               	movf	?___awmod,w
   547  0091  00B3               	movwf	_main$842
   548  0092                     l1267:
   549  0092  300A               	movlw	10
   550  0093  00A0               	movwf	___awmod@divisor
   551  0094  3000               	movlw	0
   552  0095  00A1               	movwf	___awmod@divisor+1
   553  0096  0834               	movf	_main$842+1,w
   554  0097  00A3               	movwf	___awmod@dividend+1
   555  0098  0833               	movf	_main$842,w
   556  0099  00A2               	movwf	___awmod@dividend
   557  009A  120A  118A  2181  120A  118A  	fcall	___awmod
   558  009F  1283               	bcf	3,5	;RP0=0, select bank0
   559  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   560  00A1  0820               	movf	?___awmod,w
   561  00A2  00B0               	movwf	??_main
   562  00A3  0830               	movf	??_main,w
   563  00A4  00B5               	movwf	_unidades
   564  00A5  2841               	goto	l1261
   565  00A6  120A  118A  280E   	ljmp	start
   566  00A9                     __end_of_main:
   567                           
   568                           	psect	text1
   569  0181                     __ptext1:	
   570 ;; *************** function ___awmod *****************
   571 ;; Defined at:
   572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  divisor         2    0[BANK0 ] int 
   575 ;;  dividend        2    2[BANK0 ] int 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  sign            1    6[BANK0 ] unsigned char 
   578 ;;  counter         1    5[BANK0 ] unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  2    0[BANK0 ] int 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       4       0       0       0
   589 ;;      Locals:         0       2       0       0       0
   590 ;;      Temps:          0       1       0       0       0
   591 ;;      Totals:         0       7       0       0       0
   592 ;;Total ram usage:        7 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    2
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function ___awmod
   604  0181                     ___awmod:
   605  0181                     l1109:	
   606                           ;incstack = 0
   607                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   608                           
   609  0181  1283               	bcf	3,5	;RP0=0, select bank0
   610  0182  1303               	bcf	3,6	;RP1=0, select bank0
   611  0183  01A6               	clrf	___awmod@sign
   612  0184                     l1111:
   613  0184  1FA3               	btfss	___awmod@dividend+1,7
   614  0185  2987               	goto	u341
   615  0186  2988               	goto	u340
   616  0187                     u341:
   617  0187  298F               	goto	l1117
   618  0188                     u340:
   619  0188                     l1113:
   620  0188  09A2               	comf	___awmod@dividend,f
   621  0189  09A3               	comf	___awmod@dividend+1,f
   622  018A  0AA2               	incf	___awmod@dividend,f
   623  018B  1903               	skipnz
   624  018C  0AA3               	incf	___awmod@dividend+1,f
   625  018D                     l1115:
   626  018D  01A6               	clrf	___awmod@sign
   627  018E  0AA6               	incf	___awmod@sign,f
   628  018F                     l1117:
   629  018F  1FA1               	btfss	___awmod@divisor+1,7
   630  0190  2992               	goto	u351
   631  0191  2993               	goto	u350
   632  0192                     u351:
   633  0192  2998               	goto	l1121
   634  0193                     u350:
   635  0193                     l1119:
   636  0193  09A0               	comf	___awmod@divisor,f
   637  0194  09A1               	comf	___awmod@divisor+1,f
   638  0195  0AA0               	incf	___awmod@divisor,f
   639  0196  1903               	skipnz
   640  0197  0AA1               	incf	___awmod@divisor+1,f
   641  0198                     l1121:
   642  0198  0820               	movf	___awmod@divisor,w
   643  0199  0421               	iorwf	___awmod@divisor+1,w
   644  019A  1903               	btfsc	3,2
   645  019B  299D               	goto	u361
   646  019C  299E               	goto	u360
   647  019D                     u361:
   648  019D  29CD               	goto	l1139
   649  019E                     u360:
   650  019E                     l1123:
   651  019E  01A5               	clrf	___awmod@counter
   652  019F  0AA5               	incf	___awmod@counter,f
   653  01A0  29AC               	goto	l1129
   654  01A1                     l1125:
   655  01A1  3001               	movlw	1
   656  01A2                     u375:
   657  01A2  1003               	clrc
   658  01A3  0DA0               	rlf	___awmod@divisor,f
   659  01A4  0DA1               	rlf	___awmod@divisor+1,f
   660  01A5  3EFF               	addlw	-1
   661  01A6  1D03               	skipz
   662  01A7  29A2               	goto	u375
   663  01A8                     l1127:
   664  01A8  3001               	movlw	1
   665  01A9  00A4               	movwf	??___awmod
   666  01AA  0824               	movf	??___awmod,w
   667  01AB  07A5               	addwf	___awmod@counter,f
   668  01AC                     l1129:
   669  01AC  1FA1               	btfss	___awmod@divisor+1,7
   670  01AD  29AF               	goto	u381
   671  01AE  29B0               	goto	u380
   672  01AF                     u381:
   673  01AF  29A1               	goto	l1125
   674  01B0                     u380:
   675  01B0                     l1131:
   676  01B0  0821               	movf	___awmod@divisor+1,w
   677  01B1  0223               	subwf	___awmod@dividend+1,w
   678  01B2  1D03               	skipz
   679  01B3  29B6               	goto	u395
   680  01B4  0820               	movf	___awmod@divisor,w
   681  01B5  0222               	subwf	___awmod@dividend,w
   682  01B6                     u395:
   683  01B6  1C03               	skipc
   684  01B7  29B9               	goto	u391
   685  01B8  29BA               	goto	u390
   686  01B9                     u391:
   687  01B9  29C0               	goto	l1135
   688  01BA                     u390:
   689  01BA                     l1133:
   690  01BA  0820               	movf	___awmod@divisor,w
   691  01BB  02A2               	subwf	___awmod@dividend,f
   692  01BC  0821               	movf	___awmod@divisor+1,w
   693  01BD  1C03               	skipc
   694  01BE  03A3               	decf	___awmod@dividend+1,f
   695  01BF  02A3               	subwf	___awmod@dividend+1,f
   696  01C0                     l1135:
   697  01C0  3001               	movlw	1
   698  01C1                     u405:
   699  01C1  1003               	clrc
   700  01C2  0CA1               	rrf	___awmod@divisor+1,f
   701  01C3  0CA0               	rrf	___awmod@divisor,f
   702  01C4  3EFF               	addlw	-1
   703  01C5  1D03               	skipz
   704  01C6  29C1               	goto	u405
   705  01C7                     l1137:
   706  01C7  3001               	movlw	1
   707  01C8  02A5               	subwf	___awmod@counter,f
   708  01C9  1D03               	btfss	3,2
   709  01CA  29CC               	goto	u411
   710  01CB  29CD               	goto	u410
   711  01CC                     u411:
   712  01CC  29B0               	goto	l1131
   713  01CD                     u410:
   714  01CD                     l1139:
   715  01CD  0826               	movf	___awmod@sign,w
   716  01CE  1903               	btfsc	3,2
   717  01CF  29D1               	goto	u421
   718  01D0  29D2               	goto	u420
   719  01D1                     u421:
   720  01D1  29D7               	goto	l1143
   721  01D2                     u420:
   722  01D2                     l1141:
   723  01D2  09A2               	comf	___awmod@dividend,f
   724  01D3  09A3               	comf	___awmod@dividend+1,f
   725  01D4  0AA2               	incf	___awmod@dividend,f
   726  01D5  1903               	skipnz
   727  01D6  0AA3               	incf	___awmod@dividend+1,f
   728  01D7                     l1143:
   729  01D7  0823               	movf	___awmod@dividend+1,w
   730  01D8  00A1               	movwf	?___awmod+1
   731  01D9  0822               	movf	___awmod@dividend,w
   732  01DA  00A0               	movwf	?___awmod
   733  01DB                     l335:
   734  01DB  0008               	return
   735  01DC                     __end_of___awmod:
   736                           
   737                           	psect	text2
   738  0118                     __ptext2:	
   739 ;; *************** function ___awdiv *****************
   740 ;; Defined at:
   741 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  divisor         2    7[BANK0 ] int 
   744 ;;  dividend        2    9[BANK0 ] int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  quotient        2   14[BANK0 ] int 
   747 ;;  sign            1   13[BANK0 ] unsigned char 
   748 ;;  counter         1   12[BANK0 ] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  2    7[BANK0 ] int 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       4       0       0       0
   759 ;;      Locals:         0       4       0       0       0
   760 ;;      Temps:          0       1       0       0       0
   761 ;;      Totals:         0       9       0       0       0
   762 ;;Total ram usage:        9 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    2
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function ___awdiv
   774  0118                     ___awdiv:
   775  0118                     l1065:	
   776                           ;incstack = 0
   777                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   778                           
   779  0118  1283               	bcf	3,5	;RP0=0, select bank0
   780  0119  1303               	bcf	3,6	;RP1=0, select bank0
   781  011A  01AD               	clrf	___awdiv@sign
   782  011B                     l1067:
   783  011B  1FA8               	btfss	___awdiv@divisor+1,7
   784  011C  291E               	goto	u241
   785  011D  291F               	goto	u240
   786  011E                     u241:
   787  011E  2926               	goto	l1073
   788  011F                     u240:
   789  011F                     l1069:
   790  011F  09A7               	comf	___awdiv@divisor,f
   791  0120  09A8               	comf	___awdiv@divisor+1,f
   792  0121  0AA7               	incf	___awdiv@divisor,f
   793  0122  1903               	skipnz
   794  0123  0AA8               	incf	___awdiv@divisor+1,f
   795  0124                     l1071:
   796  0124  01AD               	clrf	___awdiv@sign
   797  0125  0AAD               	incf	___awdiv@sign,f
   798  0126                     l1073:
   799  0126  1FAA               	btfss	___awdiv@dividend+1,7
   800  0127  2929               	goto	u251
   801  0128  292A               	goto	u250
   802  0129                     u251:
   803  0129  2933               	goto	l1079
   804  012A                     u250:
   805  012A                     l1075:
   806  012A  09A9               	comf	___awdiv@dividend,f
   807  012B  09AA               	comf	___awdiv@dividend+1,f
   808  012C  0AA9               	incf	___awdiv@dividend,f
   809  012D  1903               	skipnz
   810  012E  0AAA               	incf	___awdiv@dividend+1,f
   811  012F                     l1077:
   812  012F  3001               	movlw	1
   813  0130  00AB               	movwf	??___awdiv
   814  0131  082B               	movf	??___awdiv,w
   815  0132  06AD               	xorwf	___awdiv@sign,f
   816  0133                     l1079:
   817  0133  01AE               	clrf	___awdiv@quotient
   818  0134  01AF               	clrf	___awdiv@quotient+1
   819  0135                     l1081:
   820  0135  0827               	movf	___awdiv@divisor,w
   821  0136  0428               	iorwf	___awdiv@divisor+1,w
   822  0137  1903               	btfsc	3,2
   823  0138  293A               	goto	u261
   824  0139  293B               	goto	u260
   825  013A                     u261:
   826  013A  2972               	goto	l1101
   827  013B                     u260:
   828  013B                     l1083:
   829  013B  01AC               	clrf	___awdiv@counter
   830  013C  0AAC               	incf	___awdiv@counter,f
   831  013D  2949               	goto	l1089
   832  013E                     l1085:
   833  013E  3001               	movlw	1
   834  013F                     u275:
   835  013F  1003               	clrc
   836  0140  0DA7               	rlf	___awdiv@divisor,f
   837  0141  0DA8               	rlf	___awdiv@divisor+1,f
   838  0142  3EFF               	addlw	-1
   839  0143  1D03               	skipz
   840  0144  293F               	goto	u275
   841  0145                     l1087:
   842  0145  3001               	movlw	1
   843  0146  00AB               	movwf	??___awdiv
   844  0147  082B               	movf	??___awdiv,w
   845  0148  07AC               	addwf	___awdiv@counter,f
   846  0149                     l1089:
   847  0149  1FA8               	btfss	___awdiv@divisor+1,7
   848  014A  294C               	goto	u281
   849  014B  294D               	goto	u280
   850  014C                     u281:
   851  014C  293E               	goto	l1085
   852  014D                     u280:
   853  014D                     l1091:
   854  014D  3001               	movlw	1
   855  014E                     u295:
   856  014E  1003               	clrc
   857  014F  0DAE               	rlf	___awdiv@quotient,f
   858  0150  0DAF               	rlf	___awdiv@quotient+1,f
   859  0151  3EFF               	addlw	-1
   860  0152  1D03               	skipz
   861  0153  294E               	goto	u295
   862  0154  0828               	movf	___awdiv@divisor+1,w
   863  0155  022A               	subwf	___awdiv@dividend+1,w
   864  0156  1D03               	skipz
   865  0157  295A               	goto	u305
   866  0158  0827               	movf	___awdiv@divisor,w
   867  0159  0229               	subwf	___awdiv@dividend,w
   868  015A                     u305:
   869  015A  1C03               	skipc
   870  015B  295D               	goto	u301
   871  015C  295E               	goto	u300
   872  015D                     u301:
   873  015D  2965               	goto	l1097
   874  015E                     u300:
   875  015E                     l1093:
   876  015E  0827               	movf	___awdiv@divisor,w
   877  015F  02A9               	subwf	___awdiv@dividend,f
   878  0160  0828               	movf	___awdiv@divisor+1,w
   879  0161  1C03               	skipc
   880  0162  03AA               	decf	___awdiv@dividend+1,f
   881  0163  02AA               	subwf	___awdiv@dividend+1,f
   882  0164                     l1095:
   883  0164  142E               	bsf	___awdiv@quotient,0
   884  0165                     l1097:
   885  0165  3001               	movlw	1
   886  0166                     u315:
   887  0166  1003               	clrc
   888  0167  0CA8               	rrf	___awdiv@divisor+1,f
   889  0168  0CA7               	rrf	___awdiv@divisor,f
   890  0169  3EFF               	addlw	-1
   891  016A  1D03               	skipz
   892  016B  2966               	goto	u315
   893  016C                     l1099:
   894  016C  3001               	movlw	1
   895  016D  02AC               	subwf	___awdiv@counter,f
   896  016E  1D03               	btfss	3,2
   897  016F  2971               	goto	u321
   898  0170  2972               	goto	u320
   899  0171                     u321:
   900  0171  294D               	goto	l1091
   901  0172                     u320:
   902  0172                     l1101:
   903  0172  082D               	movf	___awdiv@sign,w
   904  0173  1903               	btfsc	3,2
   905  0174  2976               	goto	u331
   906  0175  2977               	goto	u330
   907  0176                     u331:
   908  0176  297C               	goto	l1105
   909  0177                     u330:
   910  0177                     l1103:
   911  0177  09AE               	comf	___awdiv@quotient,f
   912  0178  09AF               	comf	___awdiv@quotient+1,f
   913  0179  0AAE               	incf	___awdiv@quotient,f
   914  017A  1903               	skipnz
   915  017B  0AAF               	incf	___awdiv@quotient+1,f
   916  017C                     l1105:
   917  017C  082F               	movf	___awdiv@quotient+1,w
   918  017D  00A8               	movwf	?___awdiv+1
   919  017E  082E               	movf	___awdiv@quotient,w
   920  017F  00A7               	movwf	?___awdiv
   921  0180                     l322:
   922  0180  0008               	return
   923  0181                     __end_of___awdiv:
   924                           
   925                           	psect	text3
   926  00A9                     __ptext3:	
   927 ;; *************** function _isr *****************
   928 ;; Defined at:
   929 ;;		line 70 in file "prograC.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0
   945 ;;      Temps:          5       0       0       0       0
   946 ;;      Totals:         5       0       0       0       0
   947 ;;Total ram usage:        5 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    1
   950 ;; This function calls:
   951 ;;		_tabla
   952 ;; This function is called by:
   953 ;;		Interrupt level 1
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _isr
   959  00A9                     _isr:
   960  00A9                     i1l1147:
   961                           
   962                           ;prograC.c: 72:                 PORTD = tabla(decenas);
   963  00A9  1C0B               	btfss	11,0	;volatile
   964  00AA  28AC               	goto	u43_21
   965  00AB  28AD               	goto	u43_20
   966  00AC                     u43_21:
   967  00AC  28BD               	goto	i1l1157
   968  00AD                     u43_20:
   969  00AD                     i1l1149:
   970                           
   971                           ;prograC.c: 73: 
   972  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   973  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   974  00AF  1806               	btfsc	6,0	;volatile
   975  00B0  28B2               	goto	u44_21
   976  00B1  28B3               	goto	u44_20
   977  00B2                     u44_21:
   978  00B2  28B7               	goto	i1l1153
   979  00B3                     u44_20:
   980  00B3                     i1l1151:
   981                           
   982                           ;prograC.c: 74:                 PORTBbits.RB5 = 0;
   983  00B3  3001               	movlw	1
   984  00B4  00F3               	movwf	??_isr
   985  00B5  0873               	movf	??_isr,w
   986  00B6  0785               	addwf	5,f	;volatile
   987  00B7                     i1l1153:
   988                           
   989                           ;prograC.c: 76:                 PORTBbits.RB7 = 0;
   990  00B7  1886               	btfsc	6,1	;volatile
   991  00B8  28BA               	goto	u45_21
   992  00B9  28BB               	goto	u45_20
   993  00BA                     u45_21:
   994  00BA  28BD               	goto	i1l1157
   995  00BB                     u45_20:
   996  00BB                     i1l1155:
   997                           
   998                           ;prograC.c: 77:                 banderas++;
   999  00BB  3001               	movlw	1
  1000  00BC  0285               	subwf	5,f	;volatile
  1001  00BD                     i1l1157:
  1002                           
  1003                           ;prograC.c: 80:                 PORTD = tabla(unidades);
  1004  00BD  1D0B               	btfss	11,2	;volatile
  1005  00BE  28C0               	goto	u46_21
  1006  00BF  28C1               	goto	u46_20
  1007  00C0                     u46_21:
  1008  00C0  290E               	goto	i1l69
  1009  00C1                     u46_20:
  1010  00C1                     i1l1159:
  1011                           
  1012                           ;prograC.c: 82:                 PORTBbits.RB5 = 0;
  1013  00C1  3001               	movlw	1
  1014  00C2  00F3               	movwf	??_isr
  1015  00C3  0873               	movf	??_isr,w
  1016  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00C6  0787               	addwf	7,f	;volatile
  1019  00C7                     i1l1161:
  1020                           
  1021                           ;prograC.c: 84:                 PORTBbits.RB7 = 1;
  1022  00C7  307D               	movlw	125
  1023  00C8  0081               	movwf	1	;volatile
  1024  00C9                     i1l1163:
  1025                           
  1026                           ;prograC.c: 85:                 banderas = 0;
  1027  00C9  110B               	bcf	11,2	;volatile
  1028  00CA                     i1l1165:
  1029                           
  1030                           ;prograC.c: 87:         }
  1031  00CA  1286               	bcf	6,5	;volatile
  1032  00CB                     i1l1167:
  1033                           
  1034                           ;prograC.c: 88:     }
  1035  00CB  1306               	bcf	6,6	;volatile
  1036  00CC                     i1l1169:
  1037                           
  1038                           ;prograC.c: 89: 
  1039  00CC  1386               	bcf	6,7	;volatile
  1040  00CD                     i1l1171:
  1041                           
  1042                           ;prograC.c: 91:        INTCONbits.RBIF = 0;
  1043  00CD  0188               	clrf	8	;volatile
  1044                           
  1045                           ;prograC.c: 93: void main(void) {
  1046  00CE  28FB               	goto	i1l1205
  1047  00CF                     i1l1173:
  1048                           
  1049                           ;prograC.c: 95: 
  1050  00CF  0837               	movf	_centenas,w
  1051  00D0  120A  118A  21DC  120A  118A  	fcall	_tabla
  1052  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1053  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1054  00D7  0088               	movwf	8	;volatile
  1055  00D8                     i1l1175:
  1056                           
  1057                           ;prograC.c: 97:     OSCCONbits.IRCF2 = 1;
  1058  00D8  1686               	bsf	6,5	;volatile
  1059  00D9                     i1l1177:
  1060                           
  1061                           ;prograC.c: 98:     OSCCONbits.IRCF1 = 0;
  1062  00D9  1306               	bcf	6,6	;volatile
  1063  00DA                     i1l1179:
  1064                           
  1065                           ;prograC.c: 99:     OSCCONbits.IRCF0 = 0;
  1066  00DA  1386               	bcf	6,7	;volatile
  1067  00DB                     i1l1181:
  1068                           
  1069                           ;prograC.c: 100:     OSCCONbits.SCS = 1;
  1070  00DB  3001               	movlw	1
  1071  00DC  00F3               	movwf	??_isr
  1072  00DD  0873               	movf	??_isr,w
  1073  00DE  07F8               	addwf	_banderas,f
  1074                           
  1075                           ;prograC.c: 101: 
  1076  00DF  290E               	goto	i1l69
  1077  00E0                     i1l1183:
  1078                           
  1079                           ;prograC.c: 103:     ANSELH = 0;
  1080  00E0  0836               	movf	_decenas,w
  1081  00E1  120A  118A  21DC  120A  118A  	fcall	_tabla
  1082  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00E8  0088               	movwf	8	;volatile
  1085  00E9                     i1l1185:
  1086                           
  1087                           ;prograC.c: 105: 
  1088  00E9  1286               	bcf	6,5	;volatile
  1089  00EA                     i1l1187:
  1090                           
  1091                           ;prograC.c: 106:     TRISB = 3;
  1092  00EA  1706               	bsf	6,6	;volatile
  1093  00EB                     i1l1189:
  1094                           
  1095                           ;prograC.c: 107:     TRISA = 0;
  1096  00EB  1386               	bcf	6,7	;volatile
  1097  00EC  28DB               	goto	i1l1181
  1098  00ED                     i1l1193:
  1099                           
  1100                           ;prograC.c: 111:     OPTION_REGbits.nRBPU = 0;
  1101  00ED  0835               	movf	_unidades,w
  1102  00EE  120A  118A  21DC  120A  118A  	fcall	_tabla
  1103  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1104  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1105  00F5  0088               	movwf	8	;volatile
  1106  00F6                     i1l1195:
  1107                           
  1108                           ;prograC.c: 113:     WPUBbits.WPUB1 = 1;
  1109  00F6  1286               	bcf	6,5	;volatile
  1110  00F7                     i1l1197:
  1111                           
  1112                           ;prograC.c: 114: 
  1113  00F7  1306               	bcf	6,6	;volatile
  1114  00F8                     i1l1199:
  1115                           
  1116                           ;prograC.c: 115:     PORTA = 0;
  1117  00F8  1786               	bsf	6,7	;volatile
  1118  00F9                     i1l1201:
  1119                           
  1120                           ;prograC.c: 116:     PORTB = 0;
  1121  00F9  01F8               	clrf	_banderas
  1122                           
  1123                           ;prograC.c: 117:     PORTC = 0;
  1124  00FA  290E               	goto	i1l69
  1125  00FB                     i1l1205:
  1126  00FB  0878               	movf	_banderas,w
  1127  00FC  00F3               	movwf	??_isr
  1128  00FD  01F4               	clrf	??_isr+1
  1129                           
  1130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1131                           ; Switch size 1, requested type "simple"
  1132                           ; Number of cases is 1, Range of values is 0 to 0
  1133                           ; switch strategies available:
  1134                           ; Name         Instructions Cycles
  1135                           ; simple_byte            4     3 (average)
  1136                           ; direct_byte           11     8 (fixed)
  1137                           ; jumptable            260     6 (fixed)
  1138                           ;	Chosen strategy is simple_byte
  1139  00FE  0874               	movf	??_isr+1,w
  1140  00FF  3A00               	xorlw	0	; case 0
  1141  0100  1903               	skipnz
  1142  0101  2903               	goto	i1l1319
  1143  0102  290E               	goto	i1l69
  1144  0103                     i1l1319:
  1145                           
  1146                           ; Switch size 1, requested type "simple"
  1147                           ; Number of cases is 3, Range of values is 0 to 2
  1148                           ; switch strategies available:
  1149                           ; Name         Instructions Cycles
  1150                           ; simple_byte           10     6 (average)
  1151                           ; direct_byte           17     8 (fixed)
  1152                           ; jumptable            260     6 (fixed)
  1153                           ;	Chosen strategy is simple_byte
  1154  0103  0873               	movf	??_isr,w
  1155  0104  3A00               	xorlw	0	; case 0
  1156  0105  1903               	skipnz
  1157  0106  28CF               	goto	i1l1173
  1158  0107  3A01               	xorlw	1	; case 1
  1159  0108  1903               	skipnz
  1160  0109  28E0               	goto	i1l1183
  1161  010A  3A03               	xorlw	3	; case 2
  1162  010B  1903               	skipnz
  1163  010C  28ED               	goto	i1l1193
  1164  010D  290E               	goto	i1l69
  1165  010E                     i1l69:	
  1166                           ;prograC.c: 119: 
  1167                           
  1168                           
  1169                           ;prograC.c: 122:     IOCBbits.IOCB1 = 1;
  1170  010E  100B               	bcf	11,0	;volatile
  1171  010F                     i1l75:
  1172  010F  0877               	movf	??_isr+4,w
  1173  0110  008A               	movwf	10
  1174  0111  0876               	movf	??_isr+3,w
  1175  0112  0084               	movwf	4
  1176  0113  0E75               	swapf	??_isr+2,w
  1177  0114  0083               	movwf	3
  1178  0115  0EFE               	swapf	btemp,f
  1179  0116  0E7E               	swapf	btemp,w
  1180  0117  0009               	retfie
  1181  0118                     __end_of_isr:
  1182                           
  1183                           	psect	intentry
  1184  0004                     __pintentry:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1187                           
  1188  0004                     interrupt_function:
  1189  007E                     saved_w	set	btemp
  1190  0004  00FE               	movwf	btemp
  1191  0005  0E03               	swapf	3,w
  1192  0006  00F5               	movwf	??_isr+2
  1193  0007  0804               	movf	4,w
  1194  0008  00F6               	movwf	??_isr+3
  1195  0009  080A               	movf	10,w
  1196  000A  00F7               	movwf	??_isr+4
  1197  000B  120A  118A  28A9   	ljmp	_isr
  1198                           
  1199                           	psect	text4
  1200  01DC                     __ptext4:	
  1201 ;; *************** function _tabla *****************
  1202 ;; Defined at:
  1203 ;;		line 36 in file "prograC.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  display         1    wreg     unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  display         1    2[COMMON] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      unsigned char 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0
  1219 ;;      Temps:          2       0       0       0       0
  1220 ;;      Totals:         3       0       0       0       0
  1221 ;;Total ram usage:        3 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_isr
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _tabla
  1232  01DC                     _tabla:
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1236                           ;tabla@display stored from wreg
  1237  01DC  00F2               	movwf	tabla@display
  1238  01DD                     i1l997:
  1239                           
  1240                           ;prograC.c: 38: }
  1241  01DD  29F2               	goto	i1l1059
  1242  01DE                     i1l999:
  1243                           
  1244                           ;prograC.c: 40: 
  1245  01DE  303F               	movlw	63
  1246  01DF  2A1A               	goto	i1l51
  1247  01E0                     i1l1005:
  1248                           
  1249                           ;prograC.c: 43:             PORTA++;
  1250  01E0  3006               	movlw	6
  1251  01E1  2A1A               	goto	i1l51
  1252  01E2                     i1l1011:
  1253                           
  1254                           ;prograC.c: 46:             PORTA--;
  1255  01E2  305B               	movlw	91
  1256  01E3  2A1A               	goto	i1l51
  1257  01E4                     i1l1017:
  1258                           
  1259                           ;prograC.c: 49:     if (T0IF == 1) {
  1260  01E4  304F               	movlw	79
  1261  01E5  2A1A               	goto	i1l51
  1262  01E6                     i1l1023:
  1263                           
  1264                           ;prograC.c: 52: 
  1265  01E6  3066               	movlw	102
  1266  01E7  2A1A               	goto	i1l51
  1267  01E8                     i1l1029:
  1268                           
  1269                           ;prograC.c: 55: 
  1270  01E8  306D               	movlw	109
  1271  01E9  2A1A               	goto	i1l51
  1272  01EA                     i1l1035:
  1273                           
  1274                           ;prograC.c: 58:         PORTBbits.RB7 = 0;
  1275  01EA  307D               	movlw	125
  1276  01EB  2A1A               	goto	i1l51
  1277  01EC                     i1l1039:
  1278                           
  1279                           ;prograC.c: 60:         PORTD = 0;
  1280  01EC  3007               	movlw	7
  1281  01ED  2A1A               	goto	i1l51
  1282  01EE                     i1l1045:
  1283                           
  1284                           ;prograC.c: 63:             case 0:
  1285  01EE  307F               	movlw	127
  1286  01EF  2A1A               	goto	i1l51
  1287  01F0                     i1l1051:
  1288                           
  1289                           ;prograC.c: 66:                 PORTBbits.RB5 = 1;
  1290  01F0  3067               	movlw	103
  1291  01F1  2A1A               	goto	i1l51
  1292  01F2                     i1l1059:
  1293  01F2  0872               	movf	tabla@display,w
  1294  01F3  00F0               	movwf	??_tabla
  1295  01F4  01F1               	clrf	??_tabla+1
  1296                           
  1297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ; direct_byte           11     8 (fixed)
  1304                           ; jumptable            260     6 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306  01F5  0871               	movf	??_tabla+1,w
  1307  01F6  3A00               	xorlw	0	; case 0
  1308  01F7  1903               	skipnz
  1309  01F8  29FA               	goto	i1l1321
  1310  01F9  2A1A               	goto	i1l51
  1311  01FA                     i1l1321:
  1312                           
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 10, Range of values is 0 to 9
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte           31    16 (average)
  1318                           ; direct_byte           38     8 (fixed)
  1319                           ; jumptable            260     6 (fixed)
  1320                           ;	Chosen strategy is simple_byte
  1321  01FA  0870               	movf	??_tabla,w
  1322  01FB  3A00               	xorlw	0	; case 0
  1323  01FC  1903               	skipnz
  1324  01FD  29DE               	goto	i1l999
  1325  01FE  3A01               	xorlw	1	; case 1
  1326  01FF  1903               	skipnz
  1327  0200  29E0               	goto	i1l1005
  1328  0201  3A03               	xorlw	3	; case 2
  1329  0202  1903               	skipnz
  1330  0203  29E2               	goto	i1l1011
  1331  0204  3A01               	xorlw	1	; case 3
  1332  0205  1903               	skipnz
  1333  0206  29E4               	goto	i1l1017
  1334  0207  3A07               	xorlw	7	; case 4
  1335  0208  1903               	skipnz
  1336  0209  29E6               	goto	i1l1023
  1337  020A  3A01               	xorlw	1	; case 5
  1338  020B  1903               	skipnz
  1339  020C  29E8               	goto	i1l1029
  1340  020D  3A03               	xorlw	3	; case 6
  1341  020E  1903               	skipnz
  1342  020F  29EA               	goto	i1l1035
  1343  0210  3A01               	xorlw	1	; case 7
  1344  0211  1903               	skipnz
  1345  0212  29EC               	goto	i1l1039
  1346  0213  3A0F               	xorlw	15	; case 8
  1347  0214  1903               	skipnz
  1348  0215  29EE               	goto	i1l1045
  1349  0216  3A01               	xorlw	1	; case 9
  1350  0217  1903               	skipnz
  1351  0218  29F0               	goto	i1l1051
  1352  0219  2A1A               	goto	i1l51
  1353  021A                     i1l51:
  1354  021A  0008               	return
  1355  021B                     __end_of_tabla:
  1356  007E                     btemp	set	126	;btemp
  1357  007E                     wtemp0	set	126
  1358                           
  1359                           	psect	config
  1360                           
  1361                           ;Config register CONFIG1 @ 0x2007
  1362                           ;	Oscillator Selection bits
  1363                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1364                           ;	Watchdog Timer Enable bit
  1365                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1366                           ;	Power-up Timer Enable bit
  1367                           ;	PWRTE = ON, PWRT enabled
  1368                           ;	RE3/MCLR pin function select bit
  1369                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1370                           ;	Code Protection bit
  1371                           ;	CP = OFF, Program memory code protection is disabled
  1372                           ;	Data Code Protection bit
  1373                           ;	CPD = OFF, Data memory code protection is disabled
  1374                           ;	Brown Out Reset Selection bits
  1375                           ;	BOREN = OFF, BOR disabled
  1376                           ;	Internal External Switchover bit
  1377                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1378                           ;	Fail-Safe Clock Monitor Enabled bit
  1379                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1380                           ;	Low Voltage Programming Enable bit
  1381                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1382                           ;	In-Circuit Debugger Mode bit
  1383                           ;	DEBUG = 0x1, unprogrammed default
  1384  2007                     	org	8199
  1385  2007  30C4               	dw	12484
  1386                           
  1387                           ;Config register CONFIG2 @ 0x2008
  1388                           ;	Brown-out Reset Selection bit
  1389                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1390                           ;	Flash Program Memory Self Write Enable bits
  1391                           ;	WRT = OFF, Write protection off
  1392  2008                     	org	8200
  1393  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     21      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1379
                                             16 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0      22
                                              3 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (3) _tabla                                                3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod

 _isr (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 17:41:33 2021

           ___awdiv@sign 002D                      l322 0180                      l335 01DB  
                    u300 015E                      u301 015D                      u320 0172  
                    u240 011F                      u321 0171                      u305 015A  
                    u241 011E                      u330 0177                      u250 012A  
                    u410 01CD                      u331 0176                      u315 0166  
                    u251 0129                      u411 01CC                      u260 013B  
                    u420 01D2                      u340 0188                      u261 013A  
                    u421 01D1                      u405 01C1                      u341 0187  
                    u350 0193                      u351 0192                      u280 014D  
                    u360 019E                      u281 014C                      u361 019D  
                    u275 013F                      u380 01B0                      u381 01AF  
                    u390 01BA                      u295 014E                      u391 01B9  
                    u375 01A2                      u395 01B6                      _isr 00A9  
                    fsr0 0004             ___awmod@sign 0026                     l1101 0172  
                   l1103 0177                     l1111 0184                     l1105 017C  
                   l1121 0198                     l1113 0188                     l1131 01B0  
                   l1123 019E                     l1115 018D                     l1141 01D2  
                   l1133 01BA                     l1125 01A1                     l1117 018F  
                   l1109 0181                     l1221 0025                     l1213 0016  
                   l1071 0124                     l1143 01D7                     l1135 01C0  
                   l1127 01A8                     l1119 0193                     l1231 002A  
                   l1223 0026                     l1215 001C                     l1081 0135  
                   l1073 0126                     l1065 0118                     l1137 01C7  
                   l1129 01AC                     l1241 0033                     l1233 002D  
                   l1225 0027                     l1217 0020                     l1091 014D  
                   l1083 013B                     l1075 012A                     l1067 011B  
                   l1139 01CD                     l1251 0038                     l1243 0034  
                   l1235 002E                     l1227 0028                     l1219 0024  
                   l1093 015E                     l1085 013E                     l1077 012F  
                   l1069 011F                     l1261 0041                     l1253 003D  
                   l1245 0035                     l1237 002F                     l1229 0029  
                   l1095 0164                     l1087 0145                     l1079 0133  
                   l1263 0057                     l1255 003E                     l1247 0036  
                   l1239 0030                     l1097 0165                     l1089 0149  
                   l1265 007C                     l1257 003F                     l1249 0037  
                   l1099 016C                     l1267 0092                     l1259 0040  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   i1l51 021A                     i1l75 010F                     i1l69 010E  
                   _TMR0 0001                     _main 0016                     btemp 007E  
                   start 000E                    ??_isr 0073                    ?_main 0070  
        __end_of___awdiv 0181          __end_of___awmod 01DC                    _ANSEL 0188  
        ___awdiv@divisor 0027                    i1l997 01DD                    i1l999 01DE  
        ___awdiv@counter 002C                    u43_20 00AD                    u43_21 00AC  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u44_20 00B3                    u44_21 00B2  
                  u45_20 00BB                    u45_21 00BA                    u46_20 00C1  
                  u46_21 00C0                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _tabla 01DC  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00A9                   ??_main 0030  
                 ?_tabla 0070         ___awdiv@dividend 0029                   _ANSELH 0189  
                 i1l1011 01E2                   i1l1005 01E0                   i1l1023 01E6  
                 i1l1017 01E4                   i1l1201 00F9                   i1l1051 01F0  
                 i1l1035 01EA                   i1l1045 01EE                   i1l1029 01E8  
                 i1l1205 00FB                   i1l1039 01EC                   i1l1151 00B3  
                 i1l1321 01FA                   i1l1161 00C7                   i1l1153 00B7  
                 i1l1059 01F2                   i1l1171 00CD                   i1l1163 00C9  
                 i1l1155 00BB                   i1l1147 00A9                   i1l1181 00DB  
                 i1l1173 00CF                   i1l1165 00CA                   i1l1149 00AD  
                 i1l1157 00BD                   i1l1319 0103                   i1l1183 00E0  
                 i1l1175 00D8                   i1l1167 00CB                   i1l1159 00C1  
                 i1l1193 00ED                   i1l1185 00E9                   i1l1177 00D9  
                 i1l1169 00CC                   i1l1195 00F6                   i1l1187 00EA  
                 i1l1179 00DA                   i1l1197 00F7                   i1l1189 00EB  
                 i1l1199 00F8                ??___awdiv 002B                ??___awmod 0024  
       ___awdiv@quotient 002E          ___awmod@divisor 0020          ___awmod@counter 0025  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_tabla 021B           _OPTION_REGbits 0081                  ??_tabla 0070  
             __pmaintext 0016               __pintentry 0004                  ___awdiv 0118  
                ___awmod 0181                  _decenas 0036                  __ptext1 0181  
                __ptext2 0118                  __ptext3 00A9                  __ptext4 01DC  
           __size_of_isr 006F         ___awmod@dividend 0022     end_of_initialization 0012  
           tabla@display 0072                _PORTBbits 0006      start_initialization 0011  
            __end_of_isr 0118              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0035                 ?___awdiv 0027  
               ?___awmod 0020           __size_of_tabla 003F        interrupt_function 0004  
               _IOCBbits 0096                 _WPUBbits 0095         __size_of___awdiv 0069  
       __size_of___awmod 005B                 _banderas 0078                 _main$842 0033  
               _centenas 0037            __size_of_main 0093                 _unidades 0035  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
